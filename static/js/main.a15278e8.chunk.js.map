{"version":3,"sources":["actions/addTask.js","actions/editTask.js","actions/delTask.js","actions/updtTask.js","components/TaskTable.js","components/MyTask.js","App.js","taskReducer.js","index.js"],"names":["addTask","data","type","editTask","id","delTask","updtTask","connect","state","task","props","view","length","className","map","item","idx","key","title","description","theDate","Button","onClick","editT","deleteT","MyTask","handleSubmit","e","preventDefault","refs","value","desc","dDate","Date","upd","i","isEdit","update","document","getElementById","innerHTML","add","editRow","edit","deleteRow","del","Form","onSubmit","this","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","ref","required","rows","span","offset","Component","dispatch","inp","App","taskReducer","action","filter","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.a15278e8.chunk.js","sourcesContent":["// JavaScript source code\r\nconst addTask=(data)=>\r\n{  return{\r\n    type: 'ADD',\r\n    data}\r\n}\r\nexport default addTask;","// JavaScript source code\r\nconst editTask=(id)=>\r\n{  return{\r\n    type: 'EDIT',\r\n    id\r\n}\r\n}\r\nexport default editTask;","// JavaScript source code\r\nconst delTask=(id)=>\r\n{  return{\r\n    type: 'DELETE',\r\n    id}\r\n}\r\nexport default delTask;","// JavaScript source code\r\nconst updtTask=(id,data)=>\r\n{  return{\r\n    type: 'UPDATE',\r\n    id,\r\n    data\r\n}\r\n}\r\nexport default updtTask;","\r\nimport React,{Component} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nconst TaskTable=(props)=>{\r\n    let view;\r\n    if (props.task.length > 0)\r\n    {\r\n        view= <div id=\"viewTable\">\r\n<table id=\"myTab\" className=\"table table-bordered table-hover table-responsive \">\r\n    <tr>\r\n        <th id=\"noCol\">Row#</th>\r\n        <th id=\"titlCol\">Title</th>\r\n        <th id=\"descCol\" >Description</th>\r\n        <th id=\"DDateCol\" >Due Date</th>\r\n        <th id=\"edtCol\">Edit</th>\r\n        <th id=\"delCol\">Delete</th>\r\n    </tr>\r\n    <tbody>\r\n{\r\nprops.task.map((item, idx) => (\r\n\r\n        <tr id=\"addr0\" key={idx}>\r\n            <td>{idx+1}</td>\r\n            <td > {props.task[idx].title}</td>\r\n            <td > {props.task[idx].description} </td>         \r\n            <td>{props.task[idx].theDate}</td>\r\n                    <td>\r\n                        <Button onClick={()=>props.editT(idx)} id=\"btnEdt\" >\r\n                          <i className=\"fa fa-pencil-square-o\" ></i>  Edit\r\n                        </Button>\r\n                    </td> \r\n                    <td>\r\n                        <Button onClick={()=>props.deleteT(idx)} id=\"btnDel\" className=\"btn-danger\">\r\n                        <i className=\"fa fa-trash\"></i>   Delete\r\n                        </Button>\r\n                    </td>\r\n           </tr>\r\n      ))  }\r\n    </tbody>\r\n                    </table>\r\n                </div>\r\n}\r\nelse{\r\nview=<h1 id=\"empty\">No task added</h1>\r\n}\r\n    return (\r\n        <div>\r\n        {view}\r\n        </div>\r\n    )}\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n          task:state\r\n        }\r\n    }\r\n   \r\n    export default connect(mapStateToProps)(TaskTable);\r\n    ","// JavaScript source code\r\n\r\nimport React,{Component} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {Row} from 'react-bootstrap';\r\nimport {Col} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport addTask from '../actions/addTask';\r\nimport editTask from '../actions/editTask';\r\nimport delTask from '../actions/delTask';\r\nimport updtTask from '../actions/updtTask';\r\nimport {Form} from 'react-bootstrap';\r\nimport TaskTable from './TaskTable';\r\n\r\nclass MyTask  extends Component {\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const title= this.refs.title.value;\r\n        const description= this.refs.desc.value;\r\n        const theDate=this.refs.dDate.value;\r\n        let id=new Date();\r\n        let upd=false;\r\n        \r\n        for (let i=0;i<this.props.task.length;i++){    \r\n            if (this.props.task[i].isEdit==true){\r\n                id=  this.props.task[i].id;\r\n                i=this.props.task.length;\r\n                upd=true\r\n                }}\r\n    \r\n            const data ={\r\n                id: id,\r\n                title:title,\r\n                description:description,\r\n                theDate:theDate,\r\n                isEdit: false\r\n            };\r\n            if (upd==true)\r\n            {\r\n                this.props.update(id,data)\r\n                document.getElementById(\"addUpd\").innerHTML=\"Add\"\r\n                \r\n            }\r\n            else{\r\n                this.props.add(data);\r\n              }\r\n                    this.refs.title.value='';\r\n                    this.refs.desc.value='';\r\n                    this.refs.dDate.value=''; \r\n        }\r\n\r\n        editRow=(idx)=>{\r\n                  document.getElementById(\"addUpd\").innerHTML=\"Update\"        \r\n                  this.refs.title.value =this.props.task[idx].title;\r\n                  this.refs.desc.value=this.props.task[idx].description;\r\n                  this.refs.dDate.value=this.props.task[idx].theDate;        \r\n                  this.props.edit(this.props.task[idx].id);\r\n      }\r\n        deleteRow=(idx)=>{\r\n                  this.props.del(this.props.task[idx].id);\r\n       }    \r\n\r\n        render(){\r\n    \r\n    return (\r\n    <div className=\"container-fluid\">\r\n            <h1 id=\"head\"> Task management</h1>\r\n<Form onSubmit={this.handleSubmit} id=\"myForm\">\r\n     <br/>\r\n    <Form.Group as={Row} controlId=\"formHorizontalText\">\r\n     \r\n        <Form.Label column sm={2} className=\"lbl\">\r\n          Task\r\n        </Form.Label>\r\n        <Col sm={9}>\r\n          <Form.Control type=\"text\" placeholder=\"add task\" ref=\"title\" required  ref=\"title\" className=\"inp\" />\r\n        </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n        <Form.Label column sm={2} className=\"lbl\">\r\n          Description\r\n        </Form.Label>\r\n        <Col sm={9}>\r\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"descripe task\" required ref=\"desc\" className=\"inp\"/>\r\n        </Col>\r\n  </Form.Group>\r\n        <Form.Group as={Row} controlId=\"formHorizontalDue\">\r\n        <Form.Label column sm={2} className=\"lbl\">\r\n          Due Date\r\n        </Form.Label>\r\n        <Col sm={4}>\r\n          <Form.Control type=\"date\" required ref=\"dDate\"   />\r\n        </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row}>\r\n        <Col sm={{ span: 10, offset: 2 }}>\r\n          <Button  id=\"addUpd\"  type=\"submit\">Add</Button>\r\n        </Col>\r\n  </Form.Group>\r\n  </Form>\r\n  {/* pass function as props to another component */}\r\n<TaskTable editT={this.editRow} deleteT={this.deleteRow} />\r\n                        </div>\r\n                        );\r\n                        }}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      task:state\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => \r\n{ \r\n    return { \r\n        add:(inp) => {dispatch(addTask(inp))},\r\n        del:(inp)=>{dispatch(delTask(inp))},\r\n        edit:(inp)=>{dispatch(editTask(inp))},\r\n        update:(id,inp)=>{dispatch(updtTask(id,inp))}    \r\n    }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyTask);\r\n\r\n\r\n","import React,{Component} from 'react';\nimport MyTask from \"./components/MyTask\";\n\nclass App  extends Component {\n    render(){\n  return (\n    <div className=\"App\"> \n      <MyTask/> \n    </div>\n  );\n}\n}\nexport default App;\n","// JavaScript source code\r\nimport addTask from './actions/addTask';\r\nimport delTask from './actions/delTask';\r\nimport editTask from './actions/editTask';\r\nimport updtTask from './actions/updtTask';\r\n    const taskReducer =(state = [], action)=>{\r\n        switch(action.type){\r\n            case 'ADD':  \r\n                return [...state,action.data];\r\n            case 'DELETE':\r\n                return [...state].filter((task)=>task.id !== action.id);\r\n            case 'EDIT':\r\n                return  [...state].map((task)=>task.id===action.id?{...task,isEdit:true}:task);\r\n            case 'UPDATE':\r\n                return [...state].map((task)=>task.id===action.id?{...task,isEdit:false,\r\n                title:action.data.title,\r\n                description:action.data.description,\r\n                theDate:action.data.theDate}:task);\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\nexport default taskReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport taskReducer from './taskReducer';\r\n\r\nconst store = createStore(taskReducer);\n\nReactDOM.render(\r\n<Provider store={store}>\r\n<App />\r\n</Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}